"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.7.

"""

from os import environ as enviornment_var
from pathlib import Path

from configurations import Configuration

BASE_DIR = Path(__file__).resolve().parent.parent


class Base(Configuration):
    SECRET_KEY = enviornment_var["SECRET_KEY"]
    STATIC_URL = "static/"
    ROOT_URLCONF = "config.urls"
    WSGI_APPLICATION = "config.wsgi.application"
    LANGUAGE_CODE = "en-us"
    TIME_ZONE = "UTC"
    USE_I18N = True
    USE_TZ = True
    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [f'{BASE_DIR}/templates'],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]
    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": enviornment_var["DATABASE_NAME"],
            "USER": enviornment_var["DATABASE_USER"],
            "PASSWORD": enviornment_var["DATABASE_PASSWORD"],
            "HOST": enviornment_var["DATABASE_HOST"],
            "PORT": enviornment_var["DATABASE_PORT"],
            "OPTIONS": {
                "ssl_mode": "PREFERRED",
                "ssl": {
                    "ca": enviornment_var["DB_CERT_PATH"],  # Optional
                },
            },
        }
    }


class Grading(Base):
    DEBUG = False
    ALLOWED_HOSTS = ["little-lemon.xyz"]
    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "resturant`",
        "django_prometheus",
        "drf_redesign",
        "rest_framework",
    ]

    MIDDLEWARE = [
        "django_prometheus.middleware.PrometheusBeforeMiddleware",
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
        "django_prometheus.middleware.PrometheusAfterMiddleware",
    ]


class Development(Base):
    DEBUG = True
    ALLOWED_HOSTS = ["*"]
    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "debug_toolbar",
        "resturant",
        "django_prometheus",
        "drf_redesign",
        "rest_framework",
    ]

    MIDDLEWARE = [
        "django_prometheus.middleware.PrometheusBeforeMiddleware",
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "debug_toolbar.middleware.DebugToolbarMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
        "django_prometheus.middleware.PrometheusAfterMiddleware",
    ]
